name: ci-android

on:
  push:
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:
  build-android:

    # https://medium.com/@niraj_prajapati/automate-android-app-publishing-on-play-store-using-github-actions-554de7801c36
    runs-on: ubuntu-latest

    # env:
    #   SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js environment
    
        uses: actions/setup-node@v2.1.1

      - name: Allow unsecure commands 🤦
        run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV

      # Runs a single command using the runners shell
      - name: npm install and npm run build
        run: |
          npm install
          npm run build-prod

      - name: ionic sync android
        run: |
          npx cap sync android

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: "#️⃣ Generate Build Number"
        id: buildnumber
        uses: einaregilsson/build-number@v2
        with:
          prefix: android
          token: ${{ secrets.github_token }}

      - name: Write Version File (testing)
        run: |
          echo ${{ steps.buildnumber.outputs.build_number }} > ./android/app/VERSION_CODE

      - name: Write Version File (testing)
        run: |
          echo vi${{ steps.buildnumber.outputs.build_number }} > VERSION

      - name: Show VERSION file
        run: |
          cat VERSION
          cat ./android/app/VERSION_CODE

      # Add the google-services.json
      - name: Create google-services.json
        id: createGoogleServices
        run: |
          cd ./android/app
          echo '${{ secrets.GPLAY_GOOGLE_SERVICES }}' > google-services.json

      - name: Grant rights
        run: chmod +x ./android/build.gradle

      - name: Build with Gradle
        id: build
        run: |
          cd ./android/
          ./gradlew build

      - name: Build Release AAB
        id: buildRelease
        run:  |
          cd ./android/
          ./gradlew bundleRelease

      - name: Sign AAB
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.GPLAY_SIGNING_KEY }}
          alias: ${{ secrets.GPLAY_ALIAS }}
          keyStorePassword: ${{ secrets.GPLAY_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.GPLAY_KEY_PASSWORD }}

      - name: Check Output
        run: |
          ls -la ./android/app/build/outputs/bundle/release/
      
      # Follow instructions. The update is that access is granted from the play console
      # The service account must also be assigned a role within the project or it will not appear in the play console
      - name: Create service_account.json
        id: createServiceAccount
        run: |
          echo '${{ secrets.GPLAY_SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Play Store (Beta)
        id: deploy-beta
        uses: r0adkll/upload-google-play@v1
        if: startsWith(github.ref, ‘refs/tags/’) != true
        with:
          serviceAccountJson: service_account.json
          packageName: com.bendrocorp.app
          releaseFiles: ./android/app/build/outputs/bundle/release/app-release.aab
          track: beta
          releaseName: vi${{ steps.buildnumber.outputs.build_number }}
          # whatsNewDirectory: whatsnew/

      - name: Deploy to Play Store (Production)
        id: deploy-beta
        uses: r0adkll/upload-google-play@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          serviceAccountJson: service_account.json
          packageName: com.bendrocorp.app
          releaseFiles: ./android/app/build/outputs/bundle/release/app-release.aab
          track: beta
          releaseName: vi${{ steps.buildnumber.outputs.build_number }}
          # whatsNewDirectory: whatsnew/
      
